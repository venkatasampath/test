{
	"info": {
		"_postman_id": "25cb161c-d542-4ef1-b837-b518f97f9972",
		"name": "DNA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "dnas",
			"item": [
				{
					"name": "{{id}}",
					"item": [
						{
							"name": "GET all DNAs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();",
											"if (jsonData.status === \"success\") {",
											"    pm.test(\"Status code is 200. Successfully retrieve the data.\");",
											"",
											"    pm.test(\"Application name is correct from the response\", () => {",
											"        pm.expect(jsonData.meta.app).to.be.a(\"string\", \"CoRA - Commingled Remains Analytics\");",
											"    });",
											"    ",
											"",
											"    pm.test(\"Test data type of the id response\", () => {",
											"        pm.expect(jsonData.data[0].id).to.be.a(\"number\");",
											"    });",
											"",
											"",
											"    pm.test(\"Test status of the response\", () => {",
											"        pm.expect(jsonData.status).to.be.a(\"string\", \"success\");",
											"    });",
											"} else if (jsonData.message === \"Unauthenticated.\") {",
											"    pm.test(\"Error. Please provide the authentication.\");",
											"}",
											"else {",
											"    pm.test(\"Error. Please check the request again.\")",
											"}",
											"pm.test(\"Data, Status & Meta Test\", () => {",
											"    if(jsonData.meta == true){",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    }",
											"    else{",
											"        pm.test(\"response body doesnt have meta\");",
											"    }",
											" ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{org_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}api/dnas",
									"host": [
										"{{base_url}}api"
									],
									"path": [
										"dnas"
									]
								}
							},
							"response": [
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -80346588,\n \"message\": \"Duis cillum ut non\"\n}"
								},
								{
									"name": "Successful response of DNA information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "x-next",
											"value": "do sit est ",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "create DNA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();",
											"",
											"pm.environment.set('dnaID', jsonData.data.id);",
											"",
											"if (jsonData.status === \"success\"){",
											"    pm.test(\"Status code is 201. Successfully created the dna data.\");",
											"",
											"    pm.test(\"Application name is correct from the response\", () => {",
											"    pm.expect(jsonData.meta.app).to.be.a(\"string\",\"CoRA - Commingled Remains Analytics\");",
											"        });",
											"",
											"    pm.test(\"Test data type of the id response\", () => {",
											"    pm.expect(jsonData.data.id).to.be.a(\"number\");",
											"    });",
											"",
											"    pm.test(\"Test status of the response\", () => {",
											"    pm.expect(jsonData.status).to.be.a(\"string\",\"success\");",
											"    });",
											"} ",
											"else if (jsonData.message === \"Unauthenticated.\"){",
											"    pm.test(\"Error. Please provide the authentication.\");",
											"}",
											"else {",
											"    pm.test(\"Error. Please check the request again.\")",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{org_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\"org_id\": \"2\",\r\n\t\"project_id\": \"2\",\r\n\t\"se_id\": \"4032\",\r\n\t\"sb_id\": \"37\",\r\n\t\"lab_id\": \"1\",\r\n\t\"sample_number\": \"02X\",\r\n\t\"external_case_id\": \"2004H2016\",\r\n\t\"mito_sequence_number\": \"212\",\r\n\t\"mito_sequence_subgroup\": \"a\",\r\n\t\"mito_sequence_similar\": \"212\",\r\n\t\"mito_match_count\": \"10\",\r\n    \"mito_total_count\": \"10000\",\r\n    \"mito_receive_date\": \"2020-01-17\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}api/dnas",
									"host": [
										"{{base_url}}api"
									],
									"path": [
										"dnas"
									]
								}
							},
							"response": [
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -80346588,\n \"message\": \"Duis cillum ut non\"\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "x-next",
											"value": "do sit est ",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "GET a DNA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"const jsonData = pm.response.json();",
											"pm.test(\"ID Data Type Test\", () => {",
											"    pm.expect(jsonData.data.id).to.be.a(\"number\");",
											"});",
											"",
											"if (jsonData.status === \"success\"){",
											"    pm.test(\"Status code is 200. Successfully retrieve the data.\");",
											"",
											"    pm.test(\"Application name is correct from the response\", () => {",
											"    pm.expect(jsonData.meta.app).to.be.a(\"string\",\"CoRA - Commingled Remains Analytics\");",
											"        });",
											"",
											"    pm.test(\"Test the id of the response\", () => {",
											"        pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get('id'));",
											"",
											"    });",
											"     pm.test(\"Test the externalcaseid of the response\", () => {",
											"        pm.expect(jsonData.data.external_case_id).to.eql(pm.collectionVariables.get('external_case_id'));",
											"",
											"    });",
											"",
											"    pm.test(\"Test status of the response\", () => {",
											"    pm.expect(jsonData.status).to.be.a(\"string\",\"success\");",
											"    });",
											"} ",
											"else if (jsonData.message === \"Unauthenticated.\"){",
											"    pm.test(\"Error. Please provide the authentication.\");",
											"}",
											"else {",
											"    pm.test(\"Error. Please check the request again.\")",
											"}",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"id\", 8194)\r",
											"pm.collectionVariables.set(\"external_case_id\", \"2004H2016\")\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{org_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}api/dnas/:id",
									"host": [
										"{{base_url}}api"
									],
									"path": [
										"dnas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "8194",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful response of DNA information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "x-next",
											"value": "do sit est ",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -80346588,\n \"message\": \"Duis cillum ut non\"\n}"
								}
							]
						},
						{
							"name": "Update DNA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"id\", 8192)\r",
											"pm.collectionVariables.set(\"mito_sequence_number\", \"212\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();",
											"if (jsonData.status === \"success\"){",
											"    pm.test(\"Status code is 200. Successfully updated the dna data.\");",
											"",
											"    pm.test(\"Application name is correct from the response\", () => {",
											"    pm.expect(jsonData.meta.app).to.be.a(\"string\",\"CoRA - Commingled Remains Analytics\");",
											"        });",
											"",
											"    pm.test(\"Test data type of the id response\", () => {",
											"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get('id'));",
											"    });",
											"      pm.test(\"Test value updated for the mitosequencenumber response\", () => {",
											"    pm.expect(jsonData.data.mito_sequence_number).to.eql(pm.collectionVariables.get('mito_sequence_number'));",
											"    });",
											"",
											"    pm.test(\"Test status of the response\", () => {",
											"    pm.expect(jsonData.status).to.be.a(\"string\",\"success\");",
											"    });",
											"",
											"    pm.test(\"Test the dna update successful\",() => {",
											"    pm.expect(jsonData.message).to.eql(\"Dnas update successful.\");",
											"    });",
											"} ",
											"else if (jsonData.message === \"Unauthenticated.\"){",
											"    pm.test(\"Error. Please provide the authentication.\");",
											"}",
											"else {",
											"    pm.test(\"Error. Please check the request again.\")",
											"}",
											"pm.test(\"Response time is less than 2000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{org_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"sample_number\": \"springteam2021\",\r\n\t\"mito_sequence_number\": \"212\",\r\n\t\"mito_sequence_subgroup\": \"a\",\r\n\t\"mito_sequence_similar\": \"212\",\r\n\t\"mito_match_count\": \"10\",\r\n    \"mito_total_count\": \"110010\",\r\n    \"mito_receive_date\": \"2020-01-18\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}api/dnas/:id",
									"host": [
										"{{base_url}}api"
									],
									"path": [
										"dnas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "8192\n",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "x-next",
											"value": "do sit est ",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -80346588,\n \"message\": \"Duis cillum ut non\"\n}"
								}
							]
						},
						{
							"name": "Delete DNA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();",
											"if (jsonData.data === \"Resource deleted successfully\"){",
											"    pm.test(\"Status code is 200. Resource deleted successfully\");",
											"} ",
											"else if (jsonData.message === \"Unauthenticated.\"){",
											"    pm.test(\"Error. Please provide the authentication.\");",
											"}",
											"else {",
											"    pm.test(\"Error!!!Status code is 404 - Data not found.Please enter a valid id.\");",
											"}",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"pm.test(\" Check delete status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.eql(\"Resource deleted successfully\");",
											"",
											"   ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{org_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}api/dnas/{{dnaID}}",
									"host": [
										"{{base_url}}api"
									],
									"path": [
										"dnas",
										"{{dnaID}}"
									]
								}
							},
							"response": [
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -80346588,\n \"message\": \"Duis cillum ut non\"\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/dnas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dnas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "x-next",
											"value": "do sit est ",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const dnaschema = JSON.parse(pm.environment.get(\"dnaschema\"));",
					"if (pm.info.requestName !==\"Delete DNA\") {",
					"pm.test('Schema is valid', function () {",
					"  pm.response.to.have.jsonSchema(dnaschema)",
					"});}",
					"pm.test(\"Response time is less than 20s\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(20000);",
					"});",
					"pm.test(\"Check the active environment\", () => {",
					"  pm.expect(pm.environment.name).to.eql(\"Testing\");",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "{{base_url}}/api"
		},
		{
			"key": "dnaSchema",
			"value": "{\"type\": [\"array\",\"object\",\"null\",\"string\"],\n\"required\": [\n\"data\",\n\"meta\",\n\"status\"\n],\n\"externalDocs\":{\n\"url\": \"https://github.com/SachinPawaskarUNO/cora25/blob/master/docs/TechnicalManual/Database/CoRA%20Tables.md#dnas-table\"\n},\n\"properties\": {\n\"data\": {\n\"type\": [\"array\",\"object\",\"null\",\"string\"],\n\"title\": \"The data schema\",\n\"description\": \"List of all Specimens articulations for Cora\",\n\"default\": [],\n\"items\": {\n\"anyOf\": [\n{\n\"type\": [\"array\",\"object\",\"null\",\"string\"],\n\"title\": \"The first anyOf schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": {},\n\"required\": [\n\"id\",\n\"se_id\",\n\"org_id\",\n\"project_id\",\n\"additional_testing\"\n],\n\"properties\": {\n\"id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of DNA sample record\"\n},\n\"se_id\": {\n\"type\": \"integer\",\n\n\"description\": \"ID of Specimen to which this DNA sample belongs to\"\n},\n\"org_id\": {\n\"type\": \"integer\",\n\n\"description\": \"\"\n},\n\"project_id\": {\n\"type\": \"integer\",\n\n\"description\": \"\"\n} ,\n\"lab_id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of the DNA/Genomics lab to which the DNA sample was sent to for DNA analysis\"\n},\n\"external_case_id\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"The DNA testing laboratory’s case number\"\n},\n\"priority\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Priority of processing provided to the DNA lab\"\n},\n\"sample_number\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"The sample number for the DNA sample\"\n},\n\"mito_sequence_number\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"mitochondrial DNA sequence number\"\n},\n\"mito_sequence_subgroup\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"mitochondrial DNA sequence subgroup number\"\n},\n\"mito_sequence_similar\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"similar mitochondrial DNA sequence numbers\"\n},\n\"mito_match_count\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Number of individuals matching the mitochondrial DNA sequence\"\n},\n\"mito_total_count\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Total number of individuals in the reference/comparison group\"\n},\n\"mito_receive_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date when the lab sent back results of the DNA sampling\" \n},\n\"mito_haplogroup_id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of mitochondrial haplogroup\"\n},\n\"analysis_type_id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of analysis type\"\n}, \n\"mito_results_confidence\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Status denoting the confidence level of mitochondrial results such as pending, unable to assign, no result, cancelled, etc.\"\n},\n\"mito_method\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"DNA method of analysis used for mito sequence such as Sanger, NGS\"\n},\n\"external_sample_number\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"The DNA testing laboratory’s sample number\"\n},\n\"disposition_of_evidence\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Status denoting amount of sample remaining\"\n},\n\"mito_confirmed_regions\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"mitochondrial DNA confirmed regions\"\n},\n\"mito_base_pairs\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"mitochondrial DNA base pairs\"\n},\n\"locus\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"entire mito sequence of the sample\"\n},\n\"mito_num_loci\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Number of mito sequence loci\"\n},\n\"mito_mcc_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date of the Mass comparison sheet for mito sequence\"\n},\n\"sb_id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of Bone\"\n},\n\"additional_testing\": {\n\"type\": [\"boolean\",\"null\"],\n\"description\": \"Denotes if additional testing is recommended\"\n},\n\"priority_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"priority date assigned by the lab\"\n},\n\"btb_request_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"believed to be report request date\"\n},\n\"btb_results_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"believed to be report results date\"\n},\n\"disposition\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Status denoting amount of sample remaining\"\n},\n\"sample_condition\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Condition of DNA sample\"\n},\n\"weight_sample_remaining\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Weight/Amount of sample remaining at DNA lab\"\n},\n\"mito_request_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"mitochondrial report request date\"\n},\n\"mito_polymorphisms\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Polymorphisms for this mito sequence number\"\n},\n\"mito_fasta_sequence\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"entire mitochondrial sequence in fasta format\"\n},\n\"mito_haplosubgroup\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Haplosubgroup of mitochondrial sequence\"\n},\n\"austr_method\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"autosomal method of analysis used for mito sequence\"\n},\n\"austr_request_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"autosomal report request date\"\n},\n\"austr_receive_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date when the lab sent back results of the DNA sampling\"\n},\n\"austr_results_confidence\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Status denoting the confidence level of autosomal DNA results\"\n},\n\"austr_sequence_number\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"autosomal DNA sequence number\"\n},\n\"austr_sequence_subgroup\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"autosomal DNA sequence subgroup number\"\n},\n\"austr_sequence_similar\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"similar autosomal DNA sequence numbers\"\n},\n\"austr_match_count\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Number of individuals matching the autosomal DNA sequence\"\n},\n\"austr_total_count\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Total number of individuals in the reference/comparison group\"\n},\n\"austr_num_loci\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Number of autosomal sequence loci\"\n},\n\"austr_loci\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"entire autosomal sequence of the sample\"\n},\n\"austr_mcc_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date of the Mass comparison sheet for autosomal sequence\"\n},\n\"ystr_method\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"ystr method of analysis used for mito sequence\"\n},\n\"ystr_request_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"ystr report request date\"\n},\n\"ystr_receive_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date when the lab sent back results of the ystr DNA sampling\"\n},\n\"ystr_results_confidence\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Status denoting the confidence level of ystr DNA results\"\n},\n\"ystr_sequence_number\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"ystr DNA sequence number\"\n},\n\"ystr_sequence_subgroup\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"ystr DNA sequence subgroup number\"\n},\n\"ystr_sequence_similar\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"similar ystr DNA sequence numbers\"\n},\n\"ystr_match_count\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Number of individuals matching the ystr DNA sequence\"\n},\n\"ystr_total_count\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Total number of individuals in the reference/comparison group\"\n},\n\"ystr_num_loci\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"Number of ystr sequence loci\"\n},\n\"ystr_loci\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"entire ystr sequence of the sample\"\n},\n\"ystr_haplogroup\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ystr haplogroup\"\n},\n\"ystr_haplosubgroup\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Haplosubgroup of ystr sequence\"\n},\n\"ystr_mcc_date\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date of the Mass comparison sheet for ystr sequence\"\n},\n\"resample_indicator\": {\n\"type\": [\"boolean\",\"null\"],\n\"description\": \"Denotes if this specimen has been resampled for DNA/Isotope analysis\"\n},\n\"notes\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Additional information about DNA\"\n},\n\"uuid\": {\n\"type\": [\"string\",\"null\"],\n\"format\": \"uuid\",\n\"description\": \"Universal unique identifier\"\n}, \n\"user_id\": {\n\"type\": [\"integer\",\"null\"],\n\n\"description\": \"ID of user\"\n},\n\"custom_field_1\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Custom field 1 for additional data\"\n},\n\"custom_field_2\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Custom field 2 for additional data\"\n},\n\"custom_field_3\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"Custom field 3 for additional data\"\n},\n\"created_by\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"User who first created the DNA\"\n},\n\"updated_by\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"User who last updated the DNA\"\n},\n\"created_at\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date and Time of creation\"\n},\n\"updated_at\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date and Time of last update\"\n},\n\"deleted_at\": {\n\"type\": [\"string\",\"null\"],\n\n\"description\": \"Date and Time of recored deletion\"\n},\n\"tag\": {\n\"type\": [\"string\",\"null\"],\n\"description\": \"An explanation about the purpose of this instance.\"\n}\n}\n}\n]\n}\n},\n\"links\": {\n\"type\": \"object\",\n\"title\": \"The links schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": {},\n\"required\": [\n\"first\",\n\"last\",\n\"prev\",\n\"next\"\n],\n\"properties\": {\n\"first\": {\n\"type\": \"string\",\n\"title\": \"The first schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": \"\"\n},\n\"last\": {\n\"type\": \"string\",\n\"title\": \"The last schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": \"\"\n},\n\"prev\": {\n\"type\": [\"string\",\"null\"],\n\"title\": \"The prev schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": null\n},\n\"next\": {\n\"type\": \"string\",\n\"title\": \"The next schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": null\n}\n},\n\"meta\": {\n\"type\": \"object\",\n\"title\": \"The meta schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": {},\n\"required\": [\n\"current_page\",\n\"from\",\n\"last_page\",\n\"path\",\n\"per_page\",\n\"to\",\n\"total\",\n\"app\",\n\"app_version\",\n\"api_version\",\n\"author\",\n\"copyright\"\n],\n\"properties\": {\n\"current_page\": {\n\"type\": \"integer\",\n\"title\": \"The current_page schema\",\n\"description\": \"Current page number\",\n\"default\": 0\n},\n\"from\": {\n\"type\": \"integer\",\n\"title\": \"The from schema\",\n\"description\": \"Starting page number\",\n\"default\": 0\n},\n\"last_page\": {\n\"type\": \"integer\",\n\"title\": \"The last_page schema\",\n\"description\": \"Last page number\",\n\"default\": 0\n},\n\"path\": {\n\"type\": \"string\",\n\"title\": \"The path schema\",\n\"description\": \"API URL\",\n\"default\": \"\"\n},\n\"per_page\": {\n\"type\": \"integer\",\n\"title\": \"The per_page schema\",\n\"description\": \"Results per page\",\n\"default\": 0\n},\n\"to\": {\n\"type\": \"integer\",\n\"title\": \"The to schema\",\n\"description\": \"Next page number\",\n\"default\": 0\n},\n\"total\": {\n\"type\": \"integer\",\n\"title\": \"The total schema\",\n\"description\": \"Total number of DNA\",\n\"default\": 0\n},\n\"app\": {\n\"type\": \"string\",\n\"title\": \"The app schema\",\n\"description\": \"Application name\",\n\"default\": \"\"\n},\n\"app_version\": {\n\"type\": \"string\",\n\"title\": \"The app_version schema\",\n\"description\": \"Application version\",\n\"default\": \"\"\n},\n\"api_version\": {\n\"type\": \"string\",\n\"title\": \"The api_version schema\",\n\"description\": \"Version of API\",\n\"default\": \"\"\n},\n\"author\": {\n\"type\": \"string\",\n\"title\": \"The author schema\",\n\"description\": \"Author of application\",\n\"default\": \"\"\n},\n\"copyright\": {\n\"type\": \"string\",\n\"title\": \"The copyright schema\",\n\"description\": \"Owner of application copyright\",\n\"default\": \"\"\n}\n},\n\"status\": {\n\"type\": \"string\",\n\"title\": \"The status schema\",\n\"description\": \"An explanation about the purpose of this instance.\",\n\"default\": \"\"\n}\n}\n},\n\"Error\": {\n\"type\": \"object\",\n\"properties\": {\n\"code\": {\n\"type\": \"integer\",\n\n\"nullable\":true\n},\n\"message\": {\n\"type\": \"string\",\n\"nullable\":true\n}\n}\n}\n}}\n\n",
			"disabled": true
		},
		{
			"key": "id",
			"value": 8192
		},
		{
			"key": "external_case_id",
			"value": "2004H2016"
		},
		{
			"key": "mito_sequence_number",
			"value": "212"
		},
		{
			"key": "dnaID",
			"value": 8214,
			"disabled": true
		}
	]
}